---
title: "Hackathon DGFIP PSL 2023 "
title-block-banner: true
subtitle: "Attractivité fiscale des territoires pour les entreprises"
author:
  - name: Olivier Caron
    email: olivier.caron@dauphine.psl.eu
    affiliations: 
      name: "Paris Dauphine - PSL"
      city: Paris
      state: France
  - name: Victorien Gbaguidi
    email: victorien.gbaguidi@dauphine.eu
    affiliations: 
      name: "Paris Dauphine - PSL"
      city: Paris
      state: France
  - name: Sagliss Oussama
    email: oussama.sagliss@dauphine.eu
    affiliations: 
      name: "Paris Dauphine - PSL"
      city: Paris
      state: France
  - name: David Roufé
    email: david.roufe@dauphine.eu
    affiliations: 
      name: "Paris Dauphine - PSL"
      city: Paris
      state: France
date : "last-modified"
toc: true
number-sections: true
number-depth: 10
format:
  html:
    theme:
      light: yeti
      #dark: darkly
    code-fold: true
    code-summary: "Display code"
    code-tools: true #enables to display/hide all blocks of code
    code-copy: true #enables to copy code
    grid:
      body-width: 1000px
      margin-width: 100px
    toc: true
    toc-location: left
execute:
  echo: true
  warning: false
  message: false
editor: visual
fig-align: "center"
highlight-style: ayu
reference-location: margin
---

```{r}
#| label: library-load-data
#| echo: true
#| eval: false

library(tidyverse)
library(readxl)
library(rjson)
library(fs)
library(plotly)

data <- read_xlsx("data/REI_2022.xlsx")
data_test <- data %>%
  filter(DEPARTEMENT %in% c(95, 33, 16)) %>%
  select(DEPARTEMENT, DIRECTION, COMMUNE, 5, contains("CFE"))
  

delib <- read.csv2("data/deliberations-de-fiscalite-directe-locale-des-communes-2023-hors-taux.csv")
delib_test <- delib %>%
  filter(DEP %in% c(95, 33, 16))

write_csv2(data_test, "data/REI_2022_95_33_16(1).csv")
write_csv2(delib_test, "data/delib_95_33_16.csv")
#write.table(data_test, file = "data/REI_2022_95_33_16_UTF8.csv", sep = ";", row.names = FALSE, fileEncoding = "UTF-8")
#write.table(delib_test, file = "data/delib_95_33_16_UTF8.csv", sep = ";", row.names = FALSE, fileEncoding = "UTF-8")

communes_data <- read.csv("data/v_commune_2023.csv") %>%
  filter(DEP %in% c(16)) %>%
  select(COM, NCCENR) %>%
  rename(code = COM, nom = NCCENR) %>%
  mutate(cfe = round(runif(n(), min = 2.5, max = 15.7),2)) %>%
  mutate(hover_text = paste0(nom, "<br>", cfe))
  
```

## Sujet et description

Nous avons décidé de nous intéresser au sujet 3:

**`Attractivité fiscale des territoires pour les entreprises.`**

Le but final de notre application est de permettre aux **entreprises** de comprendre rapidement, en fonction de ses différentes caractéristiques, là où il est lui **avantageux fiscalement** de s'implanter.\
\
Cette visualisation permet de différencier ces coûts fiscaux à l'échelle des communes de la Charente.

## Choix métiers

Nous avons choisi de nous concentrer sur le calcul de la CFE dans le département de la Charente puisque c'est le seul département pour laquelle nous avions ces données. Pour cela, nous prenons en compte le calcul de la base grâce au tarif foncier et le taux de l'intercommunalité ainsi que le coefficient de régulation.

## Choix techniques

L'objectif de ce projet est de développer un tableau de bord interactif permettant de visualiser l'attractivité fiscale des communes en France. Pour réaliser ce dashboard, nous avons sélectionné un ensemble d'outils open source, en prenant en compte l'expertise préexistante de notre équipe et la facilité d'intégration de ces technologies.

Concernant les données géographiques, nous avons utilisé les données des communes dans un fichier GeoJson

### Outils Utilisés

| Technologie | Description                                                                                                                                                                                                                                     |
|---------------------------|---------------------------------------------|
| `Python`    | Python est un langage de programme très connu orienté objet. Nous l'avons utilisé pour collecter, formater les données ainsi que calculer la CFE.                                                                                               |
| `R`         | R est un langage de programmation largement adopté par les statisticiens, économistes, biologistes et cartographes. Nous avons exploité sa facilité d'utilisation, notamment en cartographie et pour le développement d'interfaces utilisateur. |
| `Shiny`     | Shiny est un framework web initialement conçu pour R, et depuis 2022, il est également disponible pour Python. Ce choix s'appuie sur sa capacité à créer des dashboards interactifs et dynamiques facilement                                    |
| `Plotly`    | Plotly est une bibliothèque graphique interactive, open-source et basée sur un navigateur. [Plus d'informations ici](https://plotly.com/r/ "Plotly website").                                                                                   |

## Arborescence du projet

```{r}
#| label: arborescence
fs::dir_tree(path=".")
```

| Dossier parent        | Description des tâches                                                                                                                                                                                                                                                                                          |
|---------------------------|---------------------------------------------|
| `data`                | Python est un langage de programme très connu orienté objet. Nous l'avons utilisé pour collecter, formater les données ainsi que calculer la CFE.                                                                                                                                                               |
| `documentation_files` | Ce dossier contient l'ensemble des documents nécessaires à l'affichage de cette documentation directement en HTML, ce qui est idéal pour la mettre en ligne et permettre à tout le monde de comprendre rapidement le projet.                                                                                    |
| `shiny_ui.R`          | Ce fichier contient à la fois le serveur et l'UI nécessaires à l'exécution de l'application Shiny.                                                                                                                                                                                                              |
| `src`                 | Ce dossier contient l'ensemble des documents et données python nécessaires au calcul des différentes taxes. Ces traitements sont exécutés depuis Shiny en R grâce à la librairie [`Reticulate`](https://rstudio.github.io/reticulate/ "Info package Reticulate") permettant d'exécuter du code Python depuis R. |

```{r}
# Fonction pour identifier et marquer les dossiers parents
mark_parents <- function(path) {
  # Obtenir la structure du répertoire sous forme de liste
  files <- fs::dir_ls(path, recurse = TRUE)

  # Identifier les dossiers parents
  parents <- dirname(files)
  unique_parents <- unique(parents)

  # Marquer les dossiers parents avec une étoile
  marked_files <- ifelse(files %in% unique_parents, paste0("* ", files), files)

  return(marked_files)
}

# Utiliser la fonction pour votre chemin spécifique
marked_dir_structure <- mark_parents(path=".")
cat(marked_dir_structure, sep="\n")
```
